!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("canvas-tools",[],e):"object"==typeof exports?exports["canvas-tools"]=e():t["canvas-tools"]=e()}(window,(function(){return function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=4)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(t,e){var n=this;void 0===e&&(e=30),this.canvas=t,this.fps=e,this.update=function(t){return function(e){e-t>1e3/n.fps?(n.draw(),n.animationFrameId=window.requestAnimationFrame(n.update(e))):n.animationFrameId=window.requestAnimationFrame(n.update(t))}},this.ctx=t.getContext("2d"),setTimeout((function(){n.setup(),window.requestAnimationFrame(n.update(0))}),0)}return t.prototype.clear=function(t){void 0===t&&(t=this.ctx),t.clearRect(0,0,this.canvas.width,this.canvas.height)},t.prototype.destroy=function(){this.animationFrameId&&window.cancelAnimationFrame(this.animationFrameId)},t}();e.CanvasAnimator=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.draw=function(t,e){var n=e.x,o=e.y,r=e.width,i=e.height,a=e.radius,u=e.fillStyle,s=e.strokeStyle;"number"==typeof a&&(a={tl:a,tr:a,br:a,bl:a}),t.save(),t.beginPath(),t.moveTo(n+a.tl,o),t.lineTo(n+r-a.tr,o),t.quadraticCurveTo(n+r,o,n+r,o+a.tr),t.lineTo(n+r,o+i-a.br),t.quadraticCurveTo(n+r,o+i,n+r-a.br,o+i),t.lineTo(n+a.bl,o+i),t.quadraticCurveTo(n,o+i,n,o+i-a.bl),t.lineTo(n,o+a.tl),t.quadraticCurveTo(n,o,n+a.tl,o),t.closePath(),u&&(t.fillStyle=u,t.fill()),s&&(t.strokeStyle=s,t.stroke()),t.restore()},t}();e.RoundedRect=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.FONT_FAMILY='Montserrat, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',t.draw=function(e,n){var o=n.text,r=n.x,i=n.y,a=n.maxWidth,u=n.font,s=n.fillStyle,c=n.strokeStyle,l=n.textAlign,f=void 0===l?"center":l,d=n.textBaseline,v=void 0===d?"middle":d;e.save(),"number"==typeof u&&(u=t.getFont(u)),e.font=u,e.textAlign=f,e.textBaseline=v,s||c||(s="black"),s&&(e.fillStyle=s,e.fillText(o,r,i,a)),c&&(e.strokeStyle=c,e.strokeText(o,r,i,a)),e.restore()},t.getFont=function(e){return e+"px "+t.FONT_FAMILY},t}();e.Text=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.contains=function(t,e){return t.x>e.x&&t.x<e.x+e.width&&t.y<e.y+e.height&&t.y>e.y},t.intersects=function(t,e){return!(t.x>e.x+e.width||t.x+t.width<e.x||t.y>e.y+t.height||t.y+t.height<e.y)},t}();e.Rect=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(5);e.Animators=o;var r=n(8);e.ImageLoader=r.ImageLoader,function(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}(n(9))},function(t,e,n){"use strict";function o(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),o(n(6)),o(n(0)),o(n(7)),e.createCanvasElement=function(t,e,n){var o,r;void 0===e&&(e=600),void 0===n&&(n=600);var i=document.createElement("canvas");i.width=e,i.height=n,i.style.cssText="width: 100%;";var a=document.getElementById(t);return(null===(o=a)||void 0===o?void 0:o.innerHTML)&&(a.innerHTML=""),null===(r=a)||void 0===r||r.append(i),i}},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=function(t){function e(e,n){void 0===n&&(n="#232323");var o=t.call(this,e)||this;return o.fillStyle=n,o.draw=function(t,e){void 0===t&&(t=o.fillStyle),void 0===e&&(e=o.ctx),e.save(),e.fillStyle=t,e.fillRect(0,0,o.canvas.width,o.canvas.height),e.restore()},o.update=function(t){return function(t){o.draw()}},o}return r(e,t),e.prototype.setup=function(){},e}(n(0).CanvasAnimator);e.BackgroundAnimator=i},function(t,e,n){"use strict";var o,r=this&&this.__extends||(o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=function(t){function e(e,n){var o=t.call(this,e)||this;return o.canvas=e,o.grid=n,o}return r(e,t),e.prototype.x=function(t){return Math.round(t*this.canvas.width/this.grid.cols)},e.prototype.y=function(t){return Math.round(t*this.canvas.height/this.grid.rows)},e}(n(0).CanvasAnimator);e.CanvasGridAnimator=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(t,e){void 0===e&&(e=function(){}),this.loaded=0,this.images={};var n=0;for(var o in t)t.hasOwnProperty(o)&&n++;for(var o in this.total=n,t)t.hasOwnProperty(o)&&(this.images[o]=new Image,this.images[o].src=t[o]);this.onLoad(e)}return t.prototype.hasImage=function(t){return null!=this.images[t]},t.prototype.onLoad=function(t){var e=this;for(var n in this.images)this.images.hasOwnProperty(n)&&(this.loaded<this.total?this.images[n].addEventListener("load",(function(){++e.loaded>=e.total&&t(e.images)}),!1):t(this.images))},t}();e.ImageLoader=o},function(t,e,n){"use strict";function o(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),o(n(10)),o(n(11)),o(n(12)),o(n(13)),o(n(14)),o(n(15)),o(n(3)),o(n(1)),o(n(2))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),r=n(2),i=function(){function t(){}return t.draw=function(t,e){var n=e.x,i=e.y,a=e.width,u=e.height,s=e.radius,c=e.fillStyle,l=e.strokeStyle,f=void 0===l?"rgba(255,255,255,0)":l,d=e.borderWidth,v=void 0===d?Math.min(4,a/36*4):d,h=e.hoverStyle,y=e.text,p=e.font,m=e.textStyle,g=e.state;t.save(),"hover"===g&&h?c=h:c&&(c=c),t.lineWidth=v,"hover"===g&&h?f=h:f&&(f=f),o.RoundedRect.draw(t,{x:n,y:i,width:a,height:u,radius:s,fillStyle:c,strokeStyle:f}),r.Text.draw(t,{text:y,x:n+a/2,y:i+u/2,maxWidth:.9*a,font:p,fillStyle:"string"==typeof m?m:m()}),t.restore()},t}();e.Button=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.create=function(t,e,n){return{center:{x:t,y:e},radius:n}},t.draw=function(t,e){var n=e.center,o=e.radius,r=e.fillStyle,i=e.strokeStyle;t.save(),t.beginPath(),t.arc(n.x,n.y,o,0,2*Math.PI),t.closePath(),r&&(t.fillStyle=r,t.fill()),i&&(t.strokeStyle=i,t.stroke()),t.restore()},t}();e.Circle=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.getPixel=function(t,e,n){var o=t.getImageData(e,n,1,1).data;return{position:{x:e,y:n},color:{r:o[0],g:o[1],b:o[2],a:o[3]}}},t.getCanvasPixels=function(t){for(var e=t.getContext("2d").getImageData(0,0,t.width,t.height).data,n=[],o=0;o<e.length;o+=4){var r=Math.floor(o/4);e[o+3]>0&&n.push({position:{x:r%t.width,y:Math.floor(r/t.width)},color:{r:e[o],g:e[o+1],b:e[o+2],a:e[o+3]}})}return n},t}();e.Image=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.draw=function(t,e){var n=e.start,o=e.end;t.beginPath(),t.moveTo(n.x,n.y),t.lineTo(o.x,o.y),t.stroke(),t.closePath()},t}();e.Line=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=n(3),r=function(){function t(){}return t.addClickEventListener=function(e){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var i=t.getMousePos(e),a=function(t){var e=i(t);n.forEach((function(n){n.enabled&&o.Rect.contains(e,n)&&n.onClick(t)}))};return e.addEventListener("click",a),{type:"click",function:a}},t.addHoverEventListener=function(e){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var i=t.getMousePos(e),a=function(t){var r=i(t),a=!1;n.forEach((function(e){e.enabled&&o.Rect.contains(r,e)?("hover"!==e.state&&(e.state="hover",e.onMouseEnter&&e.onMouseEnter(t)),a=!0):"hover"===e.state&&(e.state=void 0,e.onMouseLeave&&e.onMouseLeave(t))})),e.style.cursor=a?"pointer":"default"};return e.addEventListener("mousemove",a),{type:"mousemove",function:a}},t.getMousePos=function(t){return function(e){var n=t.getBoundingClientRect();return{x:(e.clientX-n.left)/(n.right-n.left)*t.width,y:(e.clientY-n.top)/(n.bottom-n.top)*t.height}}},t}();e.Mouse=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(){}return t.create=function(t,e,n){return{x:t,y:e,z:n}},t.squaredDistance=function(t,e){return Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)+(void 0!==t.z&&void 0!==e.z?Math.pow(e.z-t.z,2):0)},t.distance=function(t,e){return Math.sqrt(this.squaredDistance(t,e))},t.scale=function(t,e){return e.x*=t,e.y*=t,void 0!==e.z&&(e.z*=t),e},t.equals=function(t){return function(e){return null!=t&&null!=e&&t.x===e.x&&t.y===e.y&&t.z===e.z}},t}();e.Point=o}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,