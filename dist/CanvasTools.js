!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("CanvasTools",[],e):"object"==typeof exports?exports.CanvasTools=e():t.CanvasTools=e()}(window,(function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=4)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t){this.canvas=t,this.ctx=t.getContext("2d")}return t.prototype.clear=function(t){void 0===t&&(t=this.ctx),t.clearRect(0,0,this.canvas.width,this.canvas.height)},t}();e.CanvasAnimator=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(){}return t.draw=function(t,e){var n=e.x,r=e.y,o=e.width,i=e.height,u=e.radius,a=e.fillStyle,s=e.strokeStyle;"number"==typeof u&&(u={tl:u,tr:u,br:u,bl:u}),t.save(),t.beginPath(),t.moveTo(n+u.tl,r),t.lineTo(n+o-u.tr,r),t.quadraticCurveTo(n+o,r,n+o,r+u.tr),t.lineTo(n+o,r+i-u.br),t.quadraticCurveTo(n+o,r+i,n+o-u.br,r+i),t.lineTo(n+u.bl,r+i),t.quadraticCurveTo(n,r+i,n,r+i-u.bl),t.lineTo(n,r+u.tl),t.quadraticCurveTo(n,r,n+u.tl,r),t.closePath(),a&&(t.fillStyle=a,t.fill()),s&&(t.strokeStyle=s,t.stroke()),t.restore()},t}();e.RoundedRect=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(){}return t.FONT_FAMILY='Montserrat, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',t.draw=function(e,n){var r=n.text,o=n.x,i=n.y,u=n.maxWidth,a=n.font,s=n.fillStyle,c=n.textAlign,l=void 0===c?"center":c,f=n.textBaseline,d=void 0===f?"middle":f;e.save(),e.fillStyle=s,"number"==typeof a&&(a=t.getFont(a)),e.font=a,e.textAlign=l,e.textBaseline=d,e.fillText(r,o,i,u),e.restore()},t.getFont=function(e){return e+"px "+t.FONT_FAMILY},t}();e.Text=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(){}return t.isIntersect=function(t,e){return t.x>e.x&&t.x<e.x+e.width&&t.y<e.y+e.height&&t.y>e.y},t}();e.Rect=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(5);e.Animators=r;var o=n(8);e.ImageLoader=o.ImageLoader,function(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}(n(9))},function(t,e,n){"use strict";function r(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),r(n(6)),r(n(0)),r(n(7))},function(t,e,n){"use strict";var r,o=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=function(t){function e(e,n){void 0===n&&(n="#232323");var r=t.call(this,e)||this;return r.fillStyle=n,r.draw=function(t,e){void 0===t&&(t=r.fillStyle),void 0===e&&(e=r.ctx),e.save(),e.fillStyle=t,e.fillRect(0,0,r.canvas.width,r.canvas.height),e.restore()},r}return o(e,t),e}(n(0).CanvasAnimator);e.BackgroundAnimator=i},function(t,e,n){"use strict";var r,o=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var i=function(t){function e(e,n){var r=t.call(this,e)||this;return r.canvas=e,r.grid=n,r}return o(e,t),e.prototype.x=function(t){return Math.round(t*this.canvas.width/this.grid.cols)},e.prototype.y=function(t){return Math.round(t*this.canvas.height/this.grid.rows)},e}(n(0).CanvasAnimator);e.CanvasGridAnimator=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){void 0===e&&(e=function(){}),this.loaded=0,this.images={};var n=0;for(var r in t)t.hasOwnProperty(r)&&n++;for(var r in this.total=n,t)t.hasOwnProperty(r)&&(this.images[r]=new Image,this.images[r].src=t[r]);this.onLoad(e)}return t.prototype.hasImage=function(t){return null!=this.images[t]},t.prototype.onLoad=function(t){var e=this;for(var n in this.images)this.images.hasOwnProperty(n)&&(this.loaded<this.total?this.images[n].addEventListener("load",(function(){++e.loaded>=e.total&&t(e.images)}),!1):t(this.images))},t}();e.ImageLoader=r},function(t,e,n){"use strict";function r(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),r(n(10)),r(n(11)),r(n(12)),r(n(13)),r(n(14)),r(n(3)),r(n(1)),r(n(2))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(1),o=n(2),i=function(){function t(){}return t.draw=function(t,e){var n=e.x,i=e.y,u=e.width,a=e.height,s=e.radius,c=e.fillStyle,l=e.strokeStyle,f=void 0===l?"rgba(255,255,255,0)":l,d=e.borderWidth,v=void 0===d?Math.min(4,u/36*4):d,y=e.hoverStyle,h=e.text,p=e.fontFamily,_=e.textStyle,b=e.state;t.save(),"hover"===b&&y?c=y:c&&(c=c),t.lineWidth=v,"hover"===b&&y?f=y:f&&(f=f),r.RoundedRect.draw(t,{x:n,y:i,width:u,height:a,radius:s,fillStyle:c,strokeStyle:f}),o.Text.draw(t,{text:h,x:n+u/2,y:i+a/2,maxWidth:.9*u,font:p,fillStyle:"string"==typeof _?_:_()}),t.restore()},t}();e.Button=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(){}return t.create=function(t,e,n){return{center:{x:t,y:e},radius:n}},t.draw=function(t,e){var n=e.center,r=e.radius,o=e.fillStyle,i=e.strokeStyle;t.save(),t.beginPath(),t.arc(n.x,n.y,r,0,2*Math.PI),t.closePath(),o&&(t.fillStyle=o,t.fill()),i&&(t.strokeStyle=i,t.stroke()),t.restore()},t}();e.Circle=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(){}return t.draw=function(t,e){var n=e.start,r=e.end;t.beginPath(),t.moveTo(n.x,n.y),t.lineTo(r.x,r.y),t.stroke(),t.closePath()},t}();e.Line=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(3),o=function(){function t(){}return t.addClickEventListener=function(e){for(var n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o];var i=t.getMousePos(e),u=function(t){var e=i(t);n.forEach((function(n){n.enabled&&r.Rect.isIntersect(e,n)&&n.onClick(t)}))};return e.addEventListener("click",u),{type:"click",function:u}},t.addHoverEventListener=function(e){for(var n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o];var i=t.getMousePos(e),u=function(t){var o=i(t),u=!1;n.forEach((function(e){e.enabled&&r.Rect.isIntersect(o,e)?("hover"!==e.state&&(e.state="hover",e.onMouseEnter&&e.onMouseEnter(t)),u=!0):"hover"===e.state&&(e.state=void 0,e.onMouseLeave&&e.onMouseLeave(t))})),e.style.cursor=u?"pointer":"default"};return e.addEventListener("mousemove",u),{type:"mousemove",function:u}},t.getMousePos=function(t){return function(e){var n=t.getBoundingClientRect();return{x:(e.clientX-n.left)/(n.right-n.left)*t.width,y:(e.clientY-n.top)/(n.bottom-n.top)*t.height}}},t}();e.Mouse=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(){}return t.create=function(t,e,n){return{x:t,y:e,z:n}},t.squaredDistance=function(t,e){return Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)+(void 0!==t.z&&void 0!==e.z?Math.pow(e.z-t.z,2):0)},t.distance=function(t,e){return Math.sqrt(this.squaredDistance(t,e))},t.scale=function(t,e){return e.x*=t,e.y*=t,void 0!==e.z&&(e.z*=t),e},t.equals=function(t){return function(e){return null!=t&&null!=e&&t.x===e.x&&t.y===e.y&&t.z===e.z}},t}();e.Point=r}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,